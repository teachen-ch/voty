# docker-compose.yml
version: "3.8"
services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    networks:
      default:
    command:
      - "--log.level=info"
      - "--log.filePath=/var/log/traefik/traefik.log"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.votyresolver.acme.email=voty@teachen.ch"
      - "--certificatesresolvers.votyresolver.acme.storage=/etc/traefik/acme/acme.json"
      - "--certificatesresolvers.votyresolver.acme.httpchallenge.entrypoint=web"
      # LetsEncrypt Staging Server - uncomment when testing
      # - "--certificatesResolvers.votyresolver.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory"
    volumes:
      - ./traefik/rules:/rules
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme:/etc/traefik/acme
      - ./traefik/logs:/var/log/traefik
      - ./traefik/shared:/shared
    ports:
      - "80:80"
      - "443:443"

  nginx:
    container_name: "nginx"
    env_file: ".env"
    image: nginx:alpine
    depends_on:
      - app
      - traefik
    volumes:
      - ./nginx:/etc/nginx/conf.d
    command: ["nginx", "-g", "daemon off;"]
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginx.rule=(${HOSTS})
      - traefik.http.routers.nginx.entrypoints=websecure
      - traefik.http.routers.nginx.tls=true
      - traefik.http.routers.nginx.tls.certresolver=votyresolver
      - traefik.http.middlewares.www-redirect.redirectregex.regex=^https?://(?:www\.)?(.*)voty.ch/(.*)
      - traefik.http.middlewares.www-redirect.redirectregex.replacement=https://$${1}voty.ch/$${2}
      - traefik.http.middlewares.www-redirect.redirectregex.permanent=true
      - traefik.http.routers.nginx.middlewares=www-redirect@docker
      #- traefik.http.services.nginx.loadbalancer.server.port=80

  app:
    container_name: "app"
    env_file: ".env"
    image: docker.pkg.github.com/teachen-ch/voty/voty
    restart: always
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgres://voty:voty@postgres:5432/voty
      NODE_ENV: production
      PORT: 3000
      NEXT_TELEMETRY_DISABLED: 1
    volumes:
      - ./logs:/usr/src/app/logs
      - ./uploads:/usr/src/app/uploads
    expose:
      - "3000"
    command: npm run start

  postgres:
    image: "postgres:13-alpine"
    container_name: "postgres"
    expose:
      - "5432"
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: voty
      POSTGRES_PASSWORD: voty
      POSTGRES_DB: voty
    # command: postgres -c archive_mode=on -c archive_timeout=600
