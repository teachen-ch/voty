name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: voty

jobs:
  buildpush:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2

      - name: Use specific Node Version 16.16
        uses: actions/setup-node@v2
        with:
          node-version: 16.16

      # This is only needed for semantic-release ðŸ¤”
      - name: Install Node Modules
        run: yarn install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest version
        uses: actions/checkout@v2
      - name: Cache next build artefacts
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}
      - name: Run Tests
        run: docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
